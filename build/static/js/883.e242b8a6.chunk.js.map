{"version":3,"file":"static/js/883.e242b8a6.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","pages/crear/crearReceta.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport './PageContainer.css';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div className=\"mainApp\">\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React, { useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../../styles/crearReceta.css';\r\nimport PageContainer from '../../components/container/PageContainer';\r\nimport { Grid, Paper, Typography } from '@mui/material';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst serverUrl = 'http://localhost:3000';\r\n\r\nfunction CrearReceta() {\r\n    const [titulo, setTitulo] = useState('');\r\n    const [descripcion, setDescripcion] = useState('');\r\n    const [imagen, setImagen] = useState(null);\r\n    const [ListIngredientes, setListIngredientes] = useState([]);\r\n    const [selectedIngredients, setSelectedIngredients] = useState([]);\r\n    const [ListUtensilios, setListUtensilios] = useState([]);\r\n    const [selectedUtensilios, setSelectedUtensilios] = useState([]);\r\n    const [Usuario, setUsuario] = useState([]);\r\n    const [pasos, setPasos] = useState([\"\"]);\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const resetForm = () => {\r\n        setTitulo('');\r\n        setDescripcion('');\r\n        setImagen(null);\r\n        setSelectedIngredients([]);\r\n        setSelectedUtensilios([]);\r\n        setPasos([\"\"]);\r\n\r\n        navigate('/recetas');\r\n    };\r\n\r\nuseEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    axios.post(`${serverUrl}/api/obtenerUsuario`, { token })\r\n        .then((response) => {\r\n            const { usuario_id, correo } = response.data;\r\n            setUsuario({ usuario_id, correo });\r\n            console.log({ usuario_id, correo });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n}, []);\r\n    useEffect(() => {\r\n    axios.get(`${serverUrl}/api/ingredientes`)\r\n        .then((response) => {\r\n            const nombres = response.data.map(ingrediente => ingrediente.nombre);\r\n            setListIngredientes(nombres); // Aquí se actualiza el estado\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n}, []);\r\n\r\nuseEffect(() => {\r\n        axios.get(`${serverUrl}/api/utensilios`)\r\n        .then((response) => {\r\n            const nombres = response.data.map(utensilio => utensilio.nombre);\r\n            setListUtensilios(nombres); // Aquí se actualiza el estado\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n}, []);\r\n\r\n   \r\n\r\n    const handleImagenChange = (event) => {\r\n        setImagen(event.target.value);\r\n      };\r\n\r\n    \r\n      const agregarPaso = () => {\r\n        if (pasos[pasos.length - 1] !== \"\") {\r\n          setPasos((prevPasos) => [...prevPasos, \"\"]);\r\n        }\r\n      };\r\n\r\n    const handleDescripcionChange = (event) => {\r\n        setDescripcion(event.target.value);\r\n    };\r\n    const handleTituloChange = (event) => {\r\n        setTitulo(event.target.value);\r\n    };\r\n\r\n      const handlePasoChange = (index, event) => {\r\n        const newPasos = [...pasos];\r\n        newPasos[index] = event.target.value;\r\n        setPasos(newPasos);\r\n      };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const nuevaReceta = {\r\n            titulo,\r\n            descripcion,\r\n            imagen,\r\n            ingredientes: selectedIngredients.map((nombre) => ({ nombre })),\r\n            valoraciones: [], // Aquí debes agregar el estado para las valoraciones si lo tienes\r\n            utensilios: selectedUtensilios.map((nombre) => ({ nombre })),\r\n            procedimientos: pasos.map((instruccion, index) => ({\r\n                Numpaso: index + 1,\r\n                instruccion,\r\n            })),\r\n            usuario: {\r\n                usuario_id: Usuario.usuario_id,\r\n                correo: Usuario.correo,\r\n              },        };\r\n              console.log(nuevaReceta); \r\n              console.log(Usuario);\r\n\r\n        axios.post(`${serverUrl}/api/crearReceta`, nuevaReceta)\r\n            .then((response) => {\r\n                console.log('Receta creada:', response.data);\r\n                alert('Receta creada con exito');\r\n                resetForm();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        \r\n        \r\n        <PageContainer >\r\n        <Box height=\"100%\">\r\n        <Grid container spacing={0} padding={2}>\r\n            <Grid item xs={12} md={5} marginBottom={1} marginRight={3}>\r\n                \r\n                \r\n                    <Paper sx={{ padding:1}}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Url de la imagen\r\n                    </Typography>\r\n                    <TextField fullWidth label=\"Url de la imagen\" id=\"fullWidth\" value={imagen} onChange={handleImagenChange} />\r\n                <FileUploadIcon sx={{alignItems:'center', height:100, minWidth:100}}/>\r\n                </Paper>\r\n\r\n                <Paper sx={{marginTop: 2, padding:2}}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                     Crear Receta\r\n                    </Typography>\r\n                    <TextField\r\n                        sx={{marginTop: 2}}\r\n                        fullWidth\r\n                        label=\"Titulo Receta\"\r\n                        id=\"fullWidth\"\r\n                        value={titulo}\r\n                        onChange={handleTituloChange}\r\n                    />\r\n\r\n                    <TextField\r\n                       sx={{marginTop: 2}}\r\n\r\n                        fullWidth\r\n                        multiline\r\n                        label='Descripcion'\r\n                        placeholder='Descripcion de la receta'\r\n                        value={descripcion}\r\n                        onChange={handleDescripcionChange}\r\n                    />            \r\n\r\n                </Paper>\r\n                <Paper sx={{marginTop: 2, padding:2}}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                    Pasos De La Receta\r\n                </Typography>\r\n                {pasos.map((paso, index) => (\r\n                <TextField\r\n                    sx={{marginTop: 2}}\r\n                    fullWidth\r\n                    key={index}\r\n                    label=\"Pasos\"\r\n                    value={paso}\r\n                    onChange={(event) => handlePasoChange(index, event)}\r\n                />\r\n                ))}\r\n                <Button onClick={agregarPaso}>Agregar paso</Button>\r\n                </Paper>\r\n\r\n\r\n            </Grid>  \r\n            <Grid item xs={12} md={6.8} marginBottom={1}>\r\n                \r\n                \r\n                <Paper sx={{padding:1,  marginBottom:2}}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Ingredientes\r\n                    </Typography>\r\n                    \r\n                    <Autocomplete\r\n                        multiple\r\n                        id=\"combo-box-demo\"\r\n                        options={ListIngredientes}\r\n                        sx={{ width: 300 }}\r\n                        onChange={(event, newValues) => {\r\n                            setSelectedIngredients(newValues);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Lista De Ingredientes\" />}\r\n                    />\r\n                    <List>\r\n                        <Typography variant='p' gutterBottom component=\"div\">\r\n                            Lista de ingredientes\r\n                        </Typography>\r\n                        {selectedIngredients.map((ingrediente) => (\r\n                            <ListItem key={ingrediente}>{ingrediente}</ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n                <Paper sx={{padding:1, marginBottom:2 }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Utensilios\r\n                    </Typography>\r\n                    \r\n                    <Autocomplete\r\n                        multiple\r\n                        id=\"combo-box-demo\"\r\n                        options={ListUtensilios}\r\n                        sx={{ width: 300 }}\r\n                        onChange={(event, newutensilios) => {\r\n                            setSelectedUtensilios(newutensilios);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Lista De Utensilios\" />}\r\n                    />\r\n                    <List>\r\n                        <Typography variant='p' gutterBottom component=\"div\">\r\n                            Lista de utensilios\r\n                        </Typography>\r\n                        {selectedUtensilios.map((utensilio) => (\r\n                            <ListItem key={utensilio}>{utensilio}</ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n                \r\n            </Grid>\r\n            <Paper sx={{ marginTop: 2}}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n                        Enviar Receta\r\n                    </Button>\r\n                </Paper>\r\n        </Grid>\r\n        </Box>\r\n        </PageContainer>\r\n    );\r\n    \r\n}\r\n\r\nexport default CrearReceta;\r\n"],"names":["_ref","title","description","children","_jsxs","className","Helmet","_jsx","name","content","serverUrl","titulo","setTitulo","useState","descripcion","setDescripcion","imagen","setImagen","ListIngredientes","setListIngredientes","selectedIngredients","setSelectedIngredients","ListUtensilios","setListUtensilios","selectedUtensilios","setSelectedUtensilios","Usuario","setUsuario","pasos","setPasos","navigate","useNavigate","useEffect","token","sessionStorage","getItem","axios","post","concat","then","response","usuario_id","correo","data","console","log","catch","error","get","nombres","map","ingrediente","nombre","utensilio","PageContainer","Box","height","Grid","container","spacing","padding","item","xs","md","marginBottom","marginRight","Paper","sx","Typography","variant","gutterBottom","component","TextField","fullWidth","label","id","value","onChange","event","target","FileUploadIcon","alignItems","minWidth","marginTop","multiline","placeholder","paso","index","handlePasoChange","newPasos","Button","onClick","agregarPaso","length","prevPasos","Autocomplete","multiple","options","width","newValues","renderInput","params","List","ListItem","newutensilios","color","preventDefault","nuevaReceta","ingredientes","valoraciones","utensilios","procedimientos","instruccion","Numpaso","usuario","alert"],"sourceRoot":""}